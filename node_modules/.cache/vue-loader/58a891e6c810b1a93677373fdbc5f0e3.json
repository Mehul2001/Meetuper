{"remainingRequest":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/pages/PageLogin.vue?vue&type=style&index=0&id=8ef861b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/mehul/Meetuper/src/pages/PageLogin.vue","mtime":1555640098397},{"path":"/Users/mehul/Meetuper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .hero.is-success {\n    background: #F2F6FA;\n  }\n  .hero .nav, .hero.is-success .nav {\n    -webkit-box-shadow: none;\n    box-shadow: none;\n  }\n  .box {\n    margin-top: 5rem;\n  }\n  .avatar {\n    margin-top: -70px;\n    padding-bottom: 20px;\n  }\n  .avatar img {\n    padding: 5px;\n    background: #fff;\n    border-radius: 50%;\n    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n  }\n  input {\n    font-weight: 300;\n  }\n  p {\n    font-weight: 700;\n  }\n  p.subtitle {\n    padding-top: 1rem;\n  }\n",{"version":3,"sources":["PageLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageLogin.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n\t  <section class=\"hero is-success is-fullheight\">\n\t    <div class=\"hero-body\">\n\t      <div class=\"container has-text-centered\">\n\t        <div class=\"column is-4 is-offset-4\">\n\t          <h3 class=\"title has-text-grey\">Login</h3>\n\t          <p class=\"subtitle has-text-grey\">Please login to proceed.</p>\n\t          <div class=\"box\">\n\t            <figure class=\"avatar\">\n\t                <img src=\"https://placehold.it/128x128\">\n\t            </figure>\n\t            <form>\n\t              <div class=\"field\">\n\t                <div class=\"control\">\n\t                  <input v-model=\"form.email\"\n\t\t\t\t\t\t\t\t\t\t       @blur=\"$v.form.email.$touch()\"\n\t                         class=\"input is-large\"\n\t                         type=\"email\"\n\t                         placeholder=\"Your Email\"\n\t                         autofocus=\"\"\n\t                         autocomplete=\"email\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div v-if=\"$v.form.email.$error\" class=\"form-error\">\n\t                    <span v-if=\"!$v.form.email.required\" class=\"help is-danger\">Email is required</span>\n\t                    <span v-if=\"!$v.form.email.email\" class=\"help is-danger\">Email address is not valid</span>\n\t                  </div>\n\t                </div>\n\t              </div>\n\t              <div class=\"field\">\n\t                <div class=\"control\">\n\t                  <input v-model=\"form.password\"\n\t\t\t\t\t\t\t\t\t\t       @blur=\"$v.form.password.$touch()\"\n\t                         class=\"input is-large\"\n\t                         type=\"password\"\n\t                         placeholder=\"Your Password\"\n\t                         autocomplete=\"current-password\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div v-if=\"$v.form.password.$error\" class=\"form-error\">\n\t                    <span v-if=\"!$v.form.password.required\" class=\"help is-danger\">Password is required</span>\n\t                  </div>\n\t                </div>\n\t              </div>\n\t              <button @click.prevent=\"login\"\n\t                      :disabled=\"isFormInvalid\"\n\t                      class=\"button is-block is-info is-large is-fullwidth\">Login</button>\n\t            </form>\n\t          </div>\n\t          <p class=\"has-text-grey\">\n\t            <a>Sign In With Google</a> &nbsp;·&nbsp;\n\t            <router-link :to=\"{name: 'PageRegister'}\">Sign Up</router-link> &nbsp;·&nbsp;\n\t            <a href=\"../\">Need Help?</a>\n\t          </p>\n\t        </div>\n\t      </div>\n\t    </div>\n\t  </section>\n\t</template>\n\t\n\t<script>\n\timport { required, email } from 'vuelidate/lib/validators'\n\t  export default {\n              data () {\n\t      return {\n\t        form: {\n\t          email: null,\n\t          password: null\n\t        }\n\t      }\n\t    },\n\t\t\tvalidations: {\n\t      form: {\n\t        email: {\n\t          required,\n\t          email\n\t        },\n\t        password: {\n\t          required\n\t        }\n\t      }\n\t    },\n\t\t\tcomputed: {\n\t      isFormInvalid () {\n\t        return this.$v.form.$invalid\n\t      }\n\t    },\n\t    methods: {\n\t      login () {\n\t\t\t\t\tthis.$v.form.$touch()\n\t        this.$store.dispatch('auth/loginWithEmailAndPassword', this.form)\n\t\t\t\t\t.then(() => this.$router.push('/'))\n\t          .catch((err) => console.log(err))\n\t      }\n\t    }\n\t  }\n\t</script>\n\t\n\t<style scoped>\n\t  .hero.is-success {\n\t    background: #F2F6FA;\n\t  }\n\t  .hero .nav, .hero.is-success .nav {\n\t    -webkit-box-shadow: none;\n\t    box-shadow: none;\n\t  }\n\t  .box {\n\t    margin-top: 5rem;\n\t  }\n\t  .avatar {\n\t    margin-top: -70px;\n\t    padding-bottom: 20px;\n\t  }\n\t  .avatar img {\n\t    padding: 5px;\n\t    background: #fff;\n\t    border-radius: 50%;\n\t    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n\t    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n\t  }\n\t  input {\n\t    font-weight: 300;\n\t  }\n\t  p {\n\t    font-weight: 700;\n\t  }\n\t  p.subtitle {\n\t    padding-top: 1rem;\n\t  }\n\t</style>"]}]}