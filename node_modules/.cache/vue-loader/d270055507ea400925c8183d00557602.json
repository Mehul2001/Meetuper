{"remainingRequest":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/components/ThreadCreateModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mehul/Meetuper/src/components/ThreadCreateModal.vue","mtime":1555814965180},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\t  export default {\n\t    props: {\n\t      btnTitle: {\n\t        type: String,\n\t        required: false,\n\t        default: 'Open Modal'\n\t      },\n\t      title: {\n\t        type: String,\n\t        required: false,\n\t        default: 'Create'\n\t      }\n          },\n\t    data () {\n\t      return {\n\t        isOpen: false,\n\t        form: {\n\t          title: null\n\t        }\n\t      }\n\t    },\n\t    methods: {\n\t      threadSubmitted () {\n\t        const {title} = this.form\n\t        this.$emit('threadSubmitted', {title, done: () => {\n\t          this.form.title = ''\n\t          this.isOpen = false\n\t        }})\n\t      }\n\t    }\n\t  }\n\t",{"version":3,"sources":["ThreadCreateModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ThreadCreateModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t  <div>\n\t        <!-- TODO: Toggle Modal, set isOpen to oposite value of isOpen -->\n\t    <button @click=\"isOpen = !isOpen\"\n\t            class=\"button is-success\">{{btnTitle}}</button>\n\t    <!-- TODO: create \"isOpen\" variable in data and set it to false -->\n\t    <!-- TODO: Set is-active class when isOpen is true -->\n\t    <!-- <div :class=\"['modal', 'is-active']\"> -->\n\t     <div :class=\"['modal', {'is-active': isOpen}]\">\n\t      <div class=\"modal-background\"></div>\n\t      <div class=\"modal-card\">\n\t        <header class=\"modal-card-head\">\n\t          <p class=\"modal-card-title\">{{title}}</p>\n\t          <!-- TODO: Close Modal set isOpen to false -->\n\t          <button @click=\"isOpen = false\"\n\t                  class=\"delete\"\n\t                  aria-label=\"close\"></button>\n\t        </header>\n\t        <section class=\"modal-card-body\">\n\t          <form>\n\t            <div class=\"field\">\n\t              <label class=\"title\">What would you like to ask?</label>\n\t              <!-- TODO: Create \"form\" object in data containing \"title\" and bind it to textarea -->\n\t              <textarea v-model=\"form.title\"\n\t                        class=\"textarea\"\n\t                        placeholder=\"Just write something that interest you (:\"\n\t                        rows=\"10\"></textarea>\n\t            </div>\n\t          </form>\n\t        </section>\n\t        <footer class=\"modal-card-foot\">\n\t          <!-- TODO: Emit @threadSubmitted, listen to this event in meetup page and console log out thread -->\n\t          <button @click=\"threadSubmitted\" class=\"button is-success\">Save changes</button>\n\t          <!-- TODO: Close Modal set isOpen to false -->\n\t          <button @click=\"isOpen = false\" class=\"button\">Cancel</button>\n\t        </footer>\n\t      </div>\n\t    </div>\n\t  </div>\n\t</template>\n\t\n\t<script>\n\t  export default {\n\t    props: {\n\t      btnTitle: {\n\t        type: String,\n\t        required: false,\n\t        default: 'Open Modal'\n\t      },\n\t      title: {\n\t        type: String,\n\t        required: false,\n\t        default: 'Create'\n\t      }\n          },\n\t    data () {\n\t      return {\n\t        isOpen: false,\n\t        form: {\n\t          title: null\n\t        }\n\t      }\n\t    },\n\t    methods: {\n\t      threadSubmitted () {\n\t        const {title} = this.form\n\t        this.$emit('threadSubmitted', {title, done: () => {\n\t          this.form.title = ''\n\t          this.isOpen = false\n\t        }})\n\t      }\n\t    }\n\t  }\n\t</script>\n\t\n\t<style scoped>\n\t\n\t</style>"]}]}