{"remainingRequest":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/components/MeetupCreate/MeetupDetail.vue?vue&type=style&index=0&id=000b3d46&scoped=true&lang=css&","dependencies":[{"path":"/Users/mehul/Meetuper/src/components/MeetupCreate/MeetupDetail.vue","mtime":1555730851213},{"path":"/Users/mehul/Meetuper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.time-picker {\n  display: block;\n}\n",{"version":3,"sources":["MeetupDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA","file":"MeetupDetail.vue","sourceRoot":"src/components/MeetupCreate","sourcesContent":["<template>\n  <form @input=\"emitFormData\">\n    <div class=\"field\">\n      <label class=\"title m-b-sm\">Choose Title</label>\n      <input v-model=\"form.title\"\n             @blur=\"$v.form.title.$touch()\"\n             class=\"input\"\n             type=\"text\"\n             placeholder=\"Enter Title\">\n      <div v-if=\"$v.form.title.$error\">\n        <span v-if=\"!$v.form.title.required\" class=\"help is-danger\">Title is required</span>\n      </div>\n    </div>\n    <div class=\"field\">\n      <label class=\"title m-b-sm\">Start Date</label>\n      <datepicker @input=\"setDate\"\n                  :disabledDates=\"disabledDates\"\n                  :input-class=\"'input'\"\n                  :placeholder=\"new Date | formatDate\"></datepicker>\n      <div v-if=\"$v.form.startDate.$error\">\n        <span v-if=\"!$v.form.startDate.required\" class=\"help is-danger\">Starts at is required</span>\n      </div>\n    </div>\n    <div class=\"field\">\n      <label class=\"title m-b-sm\">From</label>\n      <vue-timepicker :minute-interval=\"10\"\n                      @change=\"changeTime($event, 'timeFrom')\"></vue-timepicker>\n    </div>\n    <div class=\"field\">\n      <label class=\"title m-b-sm\">To</label>\n      <vue-timepicker :minute-interval=\"10\"\n                      @change=\"changeTime($event, 'timeTo')\"></vue-timepicker>\n    </div>\n    <div class=\"field\">\n      <label class=\"title m-b-sm\">Please Choose the Category.</label>\n      <div class=\"m-b-lg\">\n        <div class=\"select\">\n          <!-- TODO: Get Here Categories -->\n          <select v-model=\"form.category\"\n                  @blur=\"$v.form.category.$touch()\"\n                  @change=\"emitFormData\">\n            <option v-for=\"category of categories\"\n                    :value=\"category\"\n                    :key=\"category.id\">{{category.name}}</option>\n          </select>\n        </div>\n        <div v-if=\"$v.form.category.$error\">\n          <span v-if=\"!$v.form.category.required\" class=\"help is-danger\">Category is required</span>\n        </div>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\n  import Datepicker from 'vuejs-datepicker'\n  import VueTimepicker from 'vue2-timepicker'\n  import moment from 'moment'\n  import { required } from 'vuelidate/lib/validators'\n  export default {\n    components: {\n      Datepicker,\n      VueTimepicker\n    },\n    data () {\n      return {\n        disabledDates: {\n          customPredictor: function (date) {\n            const today = new Date()\n            const yesterday = today.setDate(today.getDate() - 1)\n            return date < yesterday\n          }\n        },\n        form: {\n          title: null,\n          startDate: null,\n          timeTo: null,\n          timeFrom: null,\n          category: null\n        }\n      }\n    },\n    validations: {\n      form: {\n        title: { required },\n        startDate: { required },\n        category: { required },\n        timeTo: { required },\n        timeFrom: { required }\n      }\n    },\n    computed: {\n      categories () {\n        return this.$store.state.categories.items\n      }\n    },\n    methods: {\n      emitFormData () {\n        this.$emit('stepUpdated', {data: this.form, isValid: !this.$v.$invalid})\n      },\n      setDate (date) {\n        this.form.startDate = moment(date).format()\n        this.emitFormData()\n      },\n      changeTime ({data}, field) {\n        const minutes = data.mm || '00'\n        const hours = data.HH || '00'\n        this.form[field] = hours + ':' + minutes\n        this.emitFormData()\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .time-picker {\n    display: block;\n  }\n</style>"]}]}