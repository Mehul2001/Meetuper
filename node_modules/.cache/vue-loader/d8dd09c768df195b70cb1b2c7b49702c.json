{"remainingRequest":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/pages/PageHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mehul/Meetuper/src/pages/PageHome.vue","mtime":1555640098397},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import CategoryItem from '@/components/CategoryItem'\n  import MeetupItem from '@/components/MeetupItem'\n  import { mapActions, mapState } from 'vuex'\n  import pageLoader from '@/mixins/pageLoader'\n  export default {\n     components: {\n\t      CategoryItem,\n        MeetupItem\n\t    },\n      mixins: [pageLoader],\n       computed: {\n\t      ...mapState({\n\t        meetups: state => state.meetups.items,\n\t        categories: state => state.categories.items\n\t      })\n    },\n    created() {\n      Promise.all([this.fetchMeetups(), this.fetchCategories()])\n\t        .then(() => this.pageLoader_resolveData())\n\t        .catch((err) => {\n\t          console.error(err)\n\t          this.pageLoader_resolveData()\n\t        })\n\t    },\n\t    methods: {\n\t      ...mapActions('meetups', ['fetchMeetups']),\n\t      ...mapActions('categories', ['fetchCategories'])\n    },\n  }\n",{"version":3,"sources":["PageHome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageHome.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n    <AppHero />\n    <div v-if=\"pageLoader_isDataLoaded\" class=\"container\">\n      <section class=\"section\">\n      <div class=\"m-b-lg\">\n        <h1 class=\"title is-inline\">Featured Meetups in \"Location\"</h1>\n        <AppDropdown />\n        <button class=\"button is-primary is-pulled-right m-r-sm\">Create Meetups</button>\n        <router-link :to=\"{name: 'PageMeetupFind'}\"\n\t                     class=\"button is-primary is-pulled-right m-r-sm\">\n\t                   All\n\t        </router-link>\n      </div>\n      <div class=\"row columns is-multiline\">\n\t        <!-- Iterate your meetups here! -->\n\t        <MeetupItem v-for=\"meetup in meetups\"\n\t                    :key=\"meetup._id\"\n\t                    :meetup=\"meetup\" />\n      </div>\n      </section>\n      <section class=\"section\">\n        <div>\n          <h1 class=\"title\">Categories</h1>\n          <div class=\"columns cover is-multiline is-mobile\">\n            <CategoryItem v-for=\"category in categories\"\n\t                          :key=\"category._id\"\n\t                          :category=\"category\" />\n          </div>\n        </div>\n      </section>\n    </div>\n    <div v-else class=\"container\">\n\t      <AppSpinner />\n\t    </div>\n      </div>\n</template>\n\n<script>\n  import CategoryItem from '@/components/CategoryItem'\n  import MeetupItem from '@/components/MeetupItem'\n  import { mapActions, mapState } from 'vuex'\n  import pageLoader from '@/mixins/pageLoader'\n  export default {\n     components: {\n\t      CategoryItem,\n        MeetupItem\n\t    },\n      mixins: [pageLoader],\n       computed: {\n\t      ...mapState({\n\t        meetups: state => state.meetups.items,\n\t        categories: state => state.categories.items\n\t      })\n    },\n    created() {\n      Promise.all([this.fetchMeetups(), this.fetchCategories()])\n\t        .then(() => this.pageLoader_resolveData())\n\t        .catch((err) => {\n\t          console.error(err)\n\t          this.pageLoader_resolveData()\n\t        })\n\t    },\n\t    methods: {\n\t      ...mapActions('meetups', ['fetchMeetups']),\n\t      ...mapActions('categories', ['fetchCategories'])\n    },\n  }\n</script>\n\n<style scoped>\n  .is-rounded {\n    border-radius: 10px !important;\n  }\n</style>"]}]}