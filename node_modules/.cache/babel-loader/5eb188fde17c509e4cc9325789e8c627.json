{"remainingRequest":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js!/Users/mehul/Meetuper/node_modules/eslint-loader/index.js??ref--13-0!/Users/mehul/Meetuper/src/router/index.js","dependencies":[{"path":"/Users/mehul/Meetuper/src/router/index.js","mtime":1555640098399},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport store from '@/store';\nimport PageHome from '@/pages/PageHome';\nimport PageMeetupDetail from '@/pages/PageMeetupDetail';\nimport PageMeetupFind from '@/pages/PageMeetupFind';\nimport PageLogin from '@/pages/PageLogin';\nimport PageRegister from '@/pages/PageRegister';\nimport PageSecret from '@/pages/PageSecret';\nimport PageNotFound from '@/pages/PageNotFound';\nimport PageNotAuthenticated from '@/pages/PageNotAuthenticated';\nVue.use(Router);\nvar router = new Router({\n  routes: [{\n    path: '/',\n    name: 'PageHome',\n    component: PageHome\n  }, {\n    path: '/find',\n    name: 'PageMeetupFind',\n    component: PageMeetupFind\n  }, {\n    path: '/meetups/secret',\n    name: 'PageSecret',\n    component: PageSecret,\n    meta: {\n      onlyAuthUser: true\n    }\n  }, {\n    path: '/meetups/:id',\n    name: 'PageMeetupDetail',\n    component: PageMeetupDetail\n  }, {\n    path: '/login',\n    name: 'PageLogin',\n    component: PageLogin,\n    meta: {\n      onlyGuestUser: true\n    }\n  }, {\n    path: '/register',\n    name: 'PageRegister',\n    component: PageRegister,\n    meta: {\n      onlyGuestUser: true\n    }\n  }, {\n    path: '/401',\n    name: 'PageNotAuthenticated',\n    component: PageNotAuthenticated\n  }, {\n    path: '*',\n    name: 'PageNotFound',\n    component: PageNotFound\n  }],\n  mode: 'history'\n});\nrouter.beforeEach(function (to, from, next) {\n  store.dispatch('auth/getAuthUser').then(function () {\n    var isAuthenticated = store.getters['auth/isAuthenticated'];\n\n    if (to.meta.onlyAuthUser) {\n      if (isAuthenticated) {\n        next();\n      } else {\n        next({\n          name: 'PageNotAuthenticated'\n        });\n      }\n    } else if (to.meta.onlyGuestUser) {\n      if (isAuthenticated) {\n        next({\n          name: 'PageHome'\n        });\n      } else {\n        next();\n      }\n    } else {\n      next();\n    }\n  });\n});\nexport default router;",{"version":3,"sources":["/Users/mehul/Meetuper/src/router/index.js"],"names":["Vue","Router","store","PageHome","PageMeetupDetail","PageMeetupFind","PageLogin","PageRegister","PageSecret","PageNotFound","PageNotAuthenticated","use","router","routes","path","name","component","meta","onlyAuthUser","onlyGuestUser","mode","beforeEach","to","from","next","dispatch","then","isAuthenticated","getters"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AAEAV,GAAG,CAACW,GAAJ,CAAQV,MAAR;AAEA,IAAMW,MAAM,GAAG,IAAIX,MAAJ,CAAW;AACtBY,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,SAAS,EAAEb;AAHf,GADI,EAMJ;AACIW,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,gBAFV;AAGIC,IAAAA,SAAS,EAAEX;AAHf,GANI,EAWJ;AACIS,IAAAA,IAAI,EAAE,iBADV;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,SAAS,EAAER,UAHf;AAIIS,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAJV,GAXI,EAiBJ;AACIJ,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,IAAI,EAAE,kBAFV;AAGIC,IAAAA,SAAS,EAAEZ;AAHf,GAjBI,EAsBJ;AACIU,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,SAAS,EAAEV,SAHf;AAIIW,IAAAA,IAAI,EAAE;AAAEE,MAAAA,aAAa,EAAE;AAAjB;AAJV,GAtBI,EA4BJ;AACIL,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,SAAS,EAAET,YAHf;AAIIU,IAAAA,IAAI,EAAE;AAAEE,MAAAA,aAAa,EAAE;AAAjB;AAJV,GA5BI,EAkCJ;AACIL,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,sBAFV;AAGIC,IAAAA,SAAS,EAAEN;AAHf,GAlCI,EAuCJ;AACII,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,SAAS,EAAEP;AAHf,GAvCI,CADc;AA8CtBW,EAAAA,IAAI,EAAE;AA9CgB,CAAX,CAAf;AAgDAR,MAAM,CAACS,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClCtB,EAAAA,KAAK,CAACuB,QAAN,CAAe,kBAAf,EACKC,IADL,CACU,YAAM;AACR,QAAMC,eAAe,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,sBAAd,CAAxB;;AACA,QAAIN,EAAE,CAACL,IAAH,CAAQC,YAAZ,EAA0B;AACtB,UAAIS,eAAJ,EAAqB;AACjBH,QAAAA,IAAI;AACP,OAFD,MAEO;AACHA,QAAAA,IAAI,CAAC;AAAET,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACH;AACJ,KAND,MAMO,IAAIO,EAAE,CAACL,IAAH,CAAQE,aAAZ,EAA2B;AAC9B,UAAIQ,eAAJ,EAAqB;AACjBH,QAAAA,IAAI,CAAC;AAAET,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACH,OAFD,MAEO;AACHS,QAAAA,IAAI;AACP;AACJ,KANM,MAMA;AACHA,MAAAA,IAAI;AACP;AACJ,GAlBL;AAmBH,CApBD;AAsBA,eAAeZ,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport store from '@/store'\n\nimport PageHome from '@/pages/PageHome'\nimport PageMeetupDetail from '@/pages/PageMeetupDetail'\nimport PageMeetupFind from '@/pages/PageMeetupFind'\nimport PageLogin from '@/pages/PageLogin'\nimport PageRegister from '@/pages/PageRegister'\nimport PageSecret from '@/pages/PageSecret'\nimport PageNotFound from '@/pages/PageNotFound'\nimport PageNotAuthenticated from '@/pages/PageNotAuthenticated'\n\nVue.use(Router)\n\nconst router = new Router({\n    routes: [\n        {\n            path: '/',\n            name: 'PageHome',\n            component: PageHome\n        },\n        {\n            path: '/find',\n            name: 'PageMeetupFind',\n            component: PageMeetupFind\n        },\n        {\n            path: '/meetups/secret',\n            name: 'PageSecret',\n            component: PageSecret,\n            meta: { onlyAuthUser: true }\n        },\n        {\n            path: '/meetups/:id',\n            name: 'PageMeetupDetail',\n            component: PageMeetupDetail\n        },\n        {\n            path: '/login',\n            name: 'PageLogin',\n            component: PageLogin,\n            meta: { onlyGuestUser: true }\n        },\n        {\n            path: '/register',\n            name: 'PageRegister',\n            component: PageRegister,\n            meta: { onlyGuestUser: true }\n        },\n        {\n            path: '/401',\n            name: 'PageNotAuthenticated',\n            component: PageNotAuthenticated\n        },\n        {\n            path: '*',\n            name: 'PageNotFound',\n            component: PageNotFound\n        }\n    ],\n    mode: 'history'\n})\nrouter.beforeEach((to, from, next) => {\n    store.dispatch('auth/getAuthUser')\n        .then(() => {\n            const isAuthenticated = store.getters['auth/isAuthenticated']\n            if (to.meta.onlyAuthUser) {\n                if (isAuthenticated) {\n                    next()\n                } else {\n                    next({ name: 'PageNotAuthenticated' })\n                }\n            } else if (to.meta.onlyGuestUser) {\n                if (isAuthenticated) {\n                    next({ name: 'PageHome' })\n                } else {\n                    next()\n                }\n            } else {\n                next()\n            }\n        })\n})\n\nexport default router"]}]}