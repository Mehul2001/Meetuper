{"remainingRequest":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js!/Users/mehul/Meetuper/node_modules/eslint-loader/index.js??ref--13-0!/Users/mehul/Meetuper/src/store/modules/meta.js","dependencies":[{"path":"/Users/mehul/Meetuper/src/store/modules/meta.js","mtime":1555911714194},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    isLocationResolved: false,\n    item: {\n      city: '',\n      country: ''\n    }\n  },\n  getters: {\n    location: function location(state) {\n      var _state$item = state.item,\n          city = _state$item.city,\n          country = _state$item.country;\n      return city && country ? city + ', ' + country : '';\n    }\n  },\n  actions: {\n    fetchMetaData: function fetchMetaData(_ref) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      return axios.get('/api/v1').then(function (res) {\n        var meta = res.data;\n        commit('setItem', {\n          item: meta,\n          resource: 'meta'\n        }, {\n          root: true\n        });\n        commit('resolveLocation', true);\n        return meta;\n      }).catch(function (err) {\n        commit('resolveLocation', true);\n        return err;\n      });\n    }\n  },\n  mutations: {\n    resolveLocation: function resolveLocation(state, isLocationResolved) {\n      state.isLocationResolved = isLocationResolved;\n    }\n  }\n};",{"version":3,"sources":["/Users/mehul/Meetuper/src/store/modules/meta.js"],"names":["axios","namespaced","state","isLocationResolved","item","city","country","getters","location","actions","fetchMetaData","commit","get","then","res","meta","data","resource","root","catch","err","mutations","resolveLocation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAGXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,kBAAkB,EAAE,KADjB;AAEHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFC,MAAAA,OAAO,EAAE;AAFP;AAFH,GAHI;AAUXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK,oBACIN,KADJ,EACW;AAAA,wBACcA,KAAK,CAACE,IADpB;AAAA,UACJC,IADI,eACJA,IADI;AAAA,UACEC,OADF,eACEA,OADF;AAEZ,aAAQD,IAAI,IAAIC,OAAT,GAAqBD,IAAI,GAAG,IAAP,GAAcC,OAAnC,GAA8C,EAArD;AACH;AAJI,GAVE;AAgBXG,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,+BAC4B;AAAA,UAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,UAATT,KAAS,QAATA,KAAS;AAC7B,aAAOF,KAAK,CAACY,GAAN,CAAU,SAAV,EACFC,IADE,CACG,UAAAC,GAAG,EAAI;AACT,YAAMC,IAAI,GAAGD,GAAG,CAACE,IAAjB;AACAL,QAAAA,MAAM,CAAC,SAAD,EAAY;AAAEP,UAAAA,IAAI,EAAEW,IAAR;AAAcE,UAAAA,QAAQ,EAAE;AAAxB,SAAZ,EAA8C;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA9C,CAAN;AACAP,QAAAA,MAAM,CAAC,iBAAD,EAAoB,IAApB,CAAN;AACA,eAAOI,IAAP;AACH,OANE,EAOFI,KAPE,CAOI,UAAAC,GAAG,EAAI;AACVT,QAAAA,MAAM,CAAC,iBAAD,EAAoB,IAApB,CAAN;AACA,eAAOS,GAAP;AACH,OAVE,CAAP;AAWH;AAbI,GAhBE;AA+BXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACSpB,KADT,EACgBC,kBADhB,EACoC;AACvCD,MAAAA,KAAK,CAACC,kBAAN,GAA2BA,kBAA3B;AACH;AAHM;AA/BA,CAAf","sourcesContent":["import axios from 'axios'\n\nexport default {\n    namespaced: true,\n\n    state: {\n        isLocationResolved: false,\n        item: {\n            city: '',\n            country: ''\n        }\n    },\n    getters: {\n        location(state) {\n            const { city, country } = state.item\n            return (city && country) ? (city + ', ' + country) : ''\n        }\n    },\n    actions: {\n        fetchMetaData({ commit, state }) {\n            return axios.get('/api/v1')\n                .then(res => {\n                    const meta = res.data\n                    commit('setItem', { item: meta, resource: 'meta' }, { root: true })\n                    commit('resolveLocation', true)\n                    return meta\n                })\n                .catch(err => {\n                    commit('resolveLocation', true)\n                    return err\n                })\n        }\n    },\n    mutations: {\n        resolveLocation(state, isLocationResolved) {\n            state.isLocationResolved = isLocationResolved\n        }\n    }\n}"]}]}