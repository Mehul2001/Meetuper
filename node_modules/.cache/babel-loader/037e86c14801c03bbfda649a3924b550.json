{"remainingRequest":"/Users/mehul/Meetuper/node_modules/thread-loader/dist/cjs.js!/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js!/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/pages/PageLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mehul/Meetuper/src/pages/PageLogin.vue","mtime":1555714804205},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, email } from 'vuelidate/lib/validators';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        email: null,\n        password: null\n      }\n    };\n  },\n  validations: {\n    form: {\n      email: {\n        required: required,\n        email: email\n      },\n      password: {\n        required: required\n      }\n    }\n  },\n  computed: {\n    isFormInvalid: function isFormInvalid() {\n      return this.$v.form.$invalid;\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      this.$v.form.$touch();\n      this.$store.dispatch('auth/loginWithEmailAndPassword', this.form).then(function () {\n        return _this.$router.push('/');\n      }).catch(function (errorMessage) {\n        _this.$toasted.error(errorMessage, {\n          duration: 5000\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["PageLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,SAAA,QAAA,EAAA,KAAA,QAAA,0BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA;AAFA;AADA,KAAA;AAMA,GARA;AASA,EAAA,WAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA;AAKA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AALA;AADA,GATA;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,aAAA,KAAA,EAAA,CAAA,IAAA,CAAA,QAAA;AACA;AAHA,GApBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,WAAA,EAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,gCAAA,EAAA,KAAA,IAAA,EACA,IADA,CACA;AAAA,eAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OADA,EAEA,KAFA,CAEA,UAAA,YAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,YAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AACA,OAJA;AAKA;AARA;AAzBA,CAAA","sourcesContent":["<template>\n  <section class=\"hero is-success is-fullheight\">\n    <div class=\"hero-body\">\n      <div class=\"container has-text-centered\">\n        <div class=\"column is-4 is-offset-4\">\n          <h3 class=\"title has-text-grey\">Login</h3>\n          <p class=\"subtitle has-text-grey\">Please login to proceed.</p>\n          <div class=\"box\">\n            <figure class=\"avatar\">\n                <img src=\"https://placehold.it/128x128\">\n            </figure>\n            <form>\n              <div class=\"field\">\n                <div class=\"control\">\n                  <input v-model=\"form.email\"\n                         @blur=\"$v.form.email.$touch()\"\n                         class=\"input is-large\"\n                         type=\"email\"\n                         placeholder=\"Your Email\"\n                         autofocus=\"\"\n                         autocomplete=\"email\">\n                  <div v-if=\"$v.form.email.$error\" class=\"form-error\">\n                    <span v-if=\"!$v.form.email.required\" class=\"help is-danger\">Email is required</span>\n                    <span v-if=\"!$v.form.email.email\" class=\"help is-danger\">Email address is not valid</span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"field\">\n                <div class=\"control\">\n                  <input v-model=\"form.password\"\n                         @blur=\"$v.form.password.$touch()\"\n                         class=\"input is-large\"\n                         type=\"password\"\n                         placeholder=\"Your Password\"\n                         autocomplete=\"current-password\">\n                  <div v-if=\"$v.form.password.$error\" class=\"form-error\">\n                    <span v-if=\"!$v.form.password.required\" class=\"help is-danger\">Password is required</span>\n                  </div>\n                </div>\n              </div>\n              <button @click.prevent=\"login\"\n                      :disabled=\"isFormInvalid\"\n                      class=\"button is-block is-info is-large is-fullwidth\">Login</button>\n            </form>\n          </div>\n          <p class=\"has-text-grey\">\n            <a>Sign In With Google</a> &nbsp;·&nbsp;\n            <router-link :to=\"{name: 'PageRegister'}\">Sign Up</router-link> &nbsp;·&nbsp;\n            <a href=\"../\">Need Help?</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n  import { required, email } from 'vuelidate/lib/validators'\n  export default {\n    data () {\n      return {\n        form: {\n          email: null,\n          password: null\n        }\n      }\n    },\n    validations: {\n      form: {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required\n        }\n      }\n    },\n    computed: {\n      isFormInvalid () {\n        return this.$v.form.$invalid\n      }\n    },\n    methods: {\n      login () {\n        this.$v.form.$touch()\n        this.$store.dispatch('auth/loginWithEmailAndPassword', this.form)\n          .then(() => this.$router.push('/'))\n          .catch((errorMessage) => {\n            this.$toasted.error(errorMessage, {duration: 5000})\n          })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .hero.is-success {\n    background: #F2F6FA;\n  }\n  .hero .nav, .hero.is-success .nav {\n    -webkit-box-shadow: none;\n    box-shadow: none;\n  }\n  .box {\n    margin-top: 5rem;\n  }\n  .avatar {\n    margin-top: -70px;\n    padding-bottom: 20px;\n  }\n  .avatar img {\n    padding: 5px;\n    background: #fff;\n    border-radius: 50%;\n    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n  }\n  input {\n    font-weight: 300;\n  }\n  p {\n    font-weight: 700;\n  }\n  p.subtitle {\n    padding-top: 1rem;\n  }\n</style>"],"sourceRoot":"src/pages"}]}