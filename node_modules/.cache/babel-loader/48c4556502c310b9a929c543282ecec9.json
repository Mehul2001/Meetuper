{"remainingRequest":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js!/Users/mehul/Meetuper/node_modules/eslint-loader/index.js??ref--13-0!/Users/mehul/Meetuper/src/plugins/customPlugin.js","dependencies":[{"path":"/Users/mehul/Meetuper/src/plugins/customPlugin.js","mtime":1555808669777},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var customPlugin = {\n  install: function install(Vue, options) {\n    // 1. Add global method or property\n    Vue.myGlobalMethod = function () {\n      alert('I am global method!');\n    };\n\n    Vue.myCustomProperty = 'I am Custom Property'; // 2. Add global asset\n\n    Vue.directive('blue-color', {\n      bind: function bind(el, binding) {\n        el.style.color = 'blue';\n      }\n    }); // 3. inject some component options, mixins\n\n    Vue.mixin({\n      data: function data() {\n        return {\n          custom_message: 'RAAAAAWR'\n        };\n      },\n      created: function created() {\n        console.log('Custom mixin created');\n      },\n      methods: {\n        scream: function scream() {\n          alert(this.custom_message);\n        }\n      }\n    }); // 4. Add an instance method or property\n\n    Vue.prototype.$customMethod = function () {\n      alert('I am custom instance method');\n    };\n  }\n};\nexport default customPlugin;",{"version":3,"sources":["/Users/mehul/Meetuper/src/plugins/customPlugin.js"],"names":["customPlugin","install","Vue","options","myGlobalMethod","alert","myCustomProperty","directive","bind","el","binding","style","color","mixin","data","custom_message","created","console","log","methods","scream","prototype","$customMethod"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,iBAAUC,GAAV,EAAeC,OAAf,EAAwB;AAE7B;AACAD,IAAAA,GAAG,CAACE,cAAJ,GAAqB,YAAY;AAC7BC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,KAFD;;AAIAH,IAAAA,GAAG,CAACI,gBAAJ,GAAuB,sBAAvB,CAP6B,CAS7B;;AACAJ,IAAAA,GAAG,CAACK,SAAJ,CAAc,YAAd,EAA4B;AACxBC,MAAAA,IADwB,gBACnBC,EADmB,EACfC,OADe,EACN;AACdD,QAAAA,EAAE,CAACE,KAAH,CAASC,KAAT,GAAiB,MAAjB;AACH;AAHuB,KAA5B,EAV6B,CAgB7B;;AACAV,IAAAA,GAAG,CAACW,KAAJ,CAAU;AACNC,MAAAA,IADM,kBACC;AACH,eAAO;AACHC,UAAAA,cAAc,EAAE;AADb,SAAP;AAGH,OALK;AAMNC,MAAAA,OANM,qBAMI;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,OARK;AASNC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MADK,oBACI;AACLf,UAAAA,KAAK,CAAC,KAAKU,cAAN,CAAL;AACH;AAHI;AATH,KAAV,EAjB6B,CAiC7B;;AACAb,IAAAA,GAAG,CAACmB,SAAJ,CAAcC,aAAd,GAA8B,YAAY;AACtCjB,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,KAFD;AAGH;AAtCgB,CAArB;AAyCA,eAAeL,YAAf","sourcesContent":["const customPlugin = {\n    install: function (Vue, options) {\n\n        // 1. Add global method or property\n        Vue.myGlobalMethod = function () {\n            alert('I am global method!')\n        }\n\n        Vue.myCustomProperty = 'I am Custom Property'\n\n        // 2. Add global asset\n        Vue.directive('blue-color', {\n            bind(el, binding) {\n                el.style.color = 'blue'\n            }\n        })\n\n        // 3. inject some component options, mixins\n        Vue.mixin({\n            data() {\n                return {\n                    custom_message: 'RAAAAAWR'\n                }\n            },\n            created() {\n                console.log('Custom mixin created')\n            },\n            methods: {\n                scream() {\n                    alert(this.custom_message)\n                }\n            }\n        })\n\n        // 4. Add an instance method or property\n        Vue.prototype.$customMethod = function () {\n            alert('I am custom instance method')\n        }\n    }\n}\n\nexport default customPlugin"]}]}