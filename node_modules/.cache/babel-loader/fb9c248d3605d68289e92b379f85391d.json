{"remainingRequest":"/Users/mehul/Meetuper/node_modules/thread-loader/dist/cjs.js!/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js!/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehul/Meetuper/src/components/MeetupCreate/MeetupLocation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mehul/Meetuper/src/components/MeetupCreate/MeetupLocation.vue","mtime":1555911714189},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehul/Meetuper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  data: function data() {\n    return {\n      wantChangeLocation: false,\n      form: {\n        location: null\n      }\n    };\n  },\n  validations: {\n    form: {\n      location: {\n        required: required\n      }\n    }\n  },\n  computed: {\n    ipLocation: function ipLocation() {\n      return this.$store.getters['meta/location'];\n    }\n  },\n  created: function created() {\n    if (this.ipLocation) {\n      this.form.location = this.ipLocation;\n      this.emitFormData();\n    }\n  },\n  methods: {\n    emitFormData: function emitFormData() {\n      this.$emit('stepUpdated', {\n        data: this.form,\n        isValid: !this.$v.$invalid\n      });\n    },\n    toggleLocation: function toggleLocation() {\n      if (this.ipLocation) {\n        this.form.location = this.ipLocation;\n        this.emitFormData();\n      }\n\n      this.wantChangeLocation = !this.wantChangeLocation;\n    }\n  }\n};",{"version":3,"sources":["MeetupLocation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,QAAA,QAAA,0BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AAFA,KAAA;AAMA,GARA;AASA,EAAA,WAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA;AADA;AADA,GATA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA,CAAA;AACA;AAHA,GAdA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,QAAA,KAAA,UAAA,EAAA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,KAAA,UAAA;AACA,WAAA,YAAA;AACA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA,IAAA;AAAA,QAAA,OAAA,EAAA,CAAA,KAAA,EAAA,CAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,aAAA,IAAA,CAAA,QAAA,GAAA,KAAA,UAAA;AACA,aAAA,YAAA;AACA;;AAEA,WAAA,kBAAA,GAAA,CAAA,KAAA,kBAAA;AACA;AAXA;AAzBA,CAAA","sourcesContent":["<template>\n\t  <div>\n\t    <h1 class=\"title m-b-sm\">What's your new Meetup location?</h1>\n\t    <div class=\"m-b-lg\">\n\t      <span v-if=\"ipLocation && !wantChangeLocation\" class=\"subtitle\">{{ipLocation}}</span>\n\t      <a v-if=\"ipLocation && !wantChangeLocation\" @click=\"toggleLocation\">(change location)</a>\n\t      <a v-if=\"ipLocation && wantChangeLocation\" @click=\"toggleLocation\">(Set Default location)</a>\n\t      <input v-if=\"!ipLocation || wantChangeLocation\"\n\t             @input=\"emitFormData\"\n                @blur=\"$v.form.location.$touch()\"\n\t             v-model=\"form.location\"\n\t             type=\"text\"\n\t             class=\"input\">\n\t      <div v-if=\"$v.form.location.$error\">\n\t        <span v-if=\"!$v.form.location.required\" class=\"help is-danger\">Location is required</span>\n\t      </div>\n\t    </div>\n\t  </div>\n\t</template>\n\t\n\t<script>\n\t  import { required } from 'vuelidate/lib/validators'\n\t  export default {\n\t    data () {\n\t      return {\n\t\t\t\t\twantChangeLocation: false,\n\t         form: {\n\t           location: null\n\t        }\n\t      }\n\t    },\n\t    validations: {\n\t      form: {\n\t        location: {required}\n\t      }\n      },\n\t\t\tcomputed: {\n\t      ipLocation () {\n\t        return this.$store.getters['meta/location']\n\t      }\n\t    },\n\t    created () {\n\t      if (this.ipLocation) {\n\t        this.form.location = this.ipLocation\n\t        this.emitFormData()\n\t      }\n\t    },\n\t    methods: {\n\t      emitFormData () {\n\t        this.$emit('stepUpdated', {data: this.form, isValid: !this.$v.$invalid})\n\t\t\t\t\t},\n\t      toggleLocation () {\n\t        if (this.ipLocation) {\n\t          this.form.location = this.ipLocation\n\t          this.emitFormData()\n\t        }\n\t\n\t        this.wantChangeLocation = !this.wantChangeLocation\n\t      }\n\t    }\n\t  }\n\t</script>\n\t\n\t<style scoped>"],"sourceRoot":"src/components/MeetupCreate"}]}